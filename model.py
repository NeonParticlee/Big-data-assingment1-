# -*- coding: utf-8 -*-
"""Untitled24.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-Tnsi-VIrN-NVvzOCcckXKk4-pgwEytO
"""
print("model.py has been run successfully")
import pandas as pd
import seaborn as sns
import matplotlib as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score


pokeset = pd.read_csv('res_dpre.csv')


features = ['attack', 'defense', 'speed', 'weight_kg', 'height_m', 'capture_rate']
X = pokeset[features].copy()
y = pokeset["is_legendary"]  # Target variable (legendary or not)

# Handle missing values by filling with the median
X.fillna(X.median(), inplace=True)

# Split data into training (80%) and testing (20%) sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Normalize features to improve KNN performance
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Train KNN classifier with k=3
knn = KNeighborsClassifier(n_neighbors=3)
knn.fit(X_train, y_train)

# Predict on the test set
y_pred = knn.predict(X_test)

# Evaluate accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f"KNN Accuracy: {accuracy:.4f}")

# Save results
with open("knn_results.txt", "w") as f:
    f.write(f"KNN Accuracy: {accuracy:.4f}\n")


print("model.py has passed")